
-- CRIANDO O BANCO DE DADOS DO TRABALHO FINAL
CREATE DATABASE IF NOT EXISTS TRABALHO_FINAL;

-- SELECIONANDO O BANCO DE DADOS  
USE TRABALHO_FINAL;

-- CRIANDO AS TABELAS PARA O TRABALHO FINAL

CREATE TABLE IF NOT EXISTS TB_CLASSIFICACAO (
    ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(30) NOT NULL,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_CIDADE (
    ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(60) NOT NULL,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_ESTADO (
    ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(60) NOT NULL,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_PAIS (
    ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(60) NOT NULL,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_ENDERECO (
    ID INT AUTO_INCREMENT NOT NULL,
    TIPO VARCHAR(30) NOT NULL,
    CEP VARCHAR(8) NOT NULL,
    RUA VARCHAR(30) NOT NULL,
    NUMERO INT NOT NULL,
    BAIRRO VARCHAR(30)  NOT NULL,
    COMPLEMENTO VARCHAR(30) NULL,
    ID_CIDADE INT NOT NULL,
    ID_ESTADO INT NOT NULL,
    ID_PAIS INT NOT NULL,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_CIDADE FOREIGN KEY (ID_CIDADE) REFERENCES TB_CIDADE(ID),  
    CONSTRAINT FK_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES TB_ESTADO(ID),  
    CONSTRAINT FK_PAIS FOREIGN KEY (ID_PAIS) REFERENCES TB_PAIS(ID)
);

CREATE TABLE IF NOT EXISTS TB_FORNECEDOR (
    ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(30) NOT NULL,
    CNPJ VARCHAR(14) NULL,
    ID_ENDERECO INT ,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_ENDERECO FOREIGN KEY (ID_ENDERECO) REFERENCES TB_ENDERECO(ID)
);

CREATE TABLE IF NOT EXISTS TB_PRODUTO (
	ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(30) NOT NULL,
    DESCRICAO VARCHAR(50) NULL,
    PRECO_COMPRA DECIMAL(10,2) NULL,
    PRECO_VENDA DECIMAL(10,2) NULL,
    ID_CLASSIFICACAO INT,
    ID_FORNECEDOR INT,
	DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
	CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_CLASSIFICACAO FOREIGN KEY (ID_CLASSIFICACAO) REFERENCES TB_CLASSIFICACAO(ID),
    CONSTRAINT FK_FORNECEDOR FOREIGN KEY (ID_FORNECEDOR) REFERENCES TB_FORNECEDOR(ID)
);

CREATE TABLE IF NOT EXISTS TB_FILIAL (
	ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(60) NOT NULL,
    ID_GERENTE INT ,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
	CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_VENDEDOR ( 
	ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(50) NOT NULL,
    TIPO VARCHAR(30) NOT NULL,
    SITUACAO TINYINT(1) NOT NULL,
    ID_ENDERECO INT,
    ID_FILIAL INT,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    DATA_DESLIGAMENTO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_ENDERECO_1 FOREIGN KEY (ID_ENDERECO) REFERENCES TB_ENDERECO(ID),
    CONSTRAINT FK_FILIAL FOREIGN KEY (ID_FILIAL) REFERENCES TB_FILIAL(ID)
);

-- OBS: Depois de criado a tabela vendedor crio a chave estrangeira na tabela tb_filial

ALTER TABLE TB_FILIAL
ADD CONSTRAINT FK_GERENTE FOREIGN KEY (ID_GERENTE) REFERENCES TB_VENDEDOR(ID);

CREATE TABLE IF NOT EXISTS TB_NATUREZA (
	ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(8) NOT NULL,
    DESCRICAO VARCHAR(200) NOT NULL,
	DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_CONDICAO_PAGAMENTO (
	ID INT AUTO_INCREMENT NOT NULL,
	NOME VARCHAR(200) NOT NULL,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_CLIENTES (
	ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(60) NOT NULL,
    CNPJ VARCHAR(14) NULL,
    TIPO VARCHAR(20) NOT NULL,
	ID_NATUREZA INT,
    ID_ENDERECO INT,
    ID_CONDICAO_PAGAMENTO INT,
    ID_VENDEDOR INT,
    ID_FILIAL INT,
	DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_NATUREZA FOREIGN KEY (ID_NATUREZA) REFERENCES TB_NATUREZA(ID),
	CONSTRAINT FK_ENDERECO_CLIENTES FOREIGN KEY (ID_ENDERECO) REFERENCES TB_ENDERECO(ID),
	CONSTRAINT FK_CONDICAO_PAGAMENTO FOREIGN KEY (ID_CONDICAO_PAGAMENTO) REFERENCES TB_CONDICAO_PAGAMENTO(ID),
	CONSTRAINT FK_TB_VENDEDOR FOREIGN KEY (ID_VENDEDOR) REFERENCES TB_VENDEDOR(ID),
    CONSTRAINT FK_TB_FILIAL FOREIGN KEY (ID_FILIAL) REFERENCES TB_FILIAL(ID)
);

CREATE TABLE IF NOT EXISTS TB_NOTA (
	ID INT AUTO_INCREMENT NOT NULL,
    DATA_EMISSAO DATE NOT NULL,
    DATA_ENTREGA DATE NOT NULL,
    VALOR_BRUTO DECIMAL(10,2) NOT NULL,
    VALOR_IMPOSTO DECIMAL(10,2) NOT NULL,
    VALOR_LIQUIDO DECIMAL(10,2) NOT NULL,
    ID_CLIENTE INT,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    DATA_CANCELAMENTO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES TB_CLIENTES(ID)
);

CREATE TABLE IF NOT EXISTS TB_PEDIDO (
	ID INT AUTO_INCREMENT NOT NULL,
    DATA_IMPLANTACAO DATE NOT NULL,
    DATA_ENTREGA DATE NOT NULL,
    DATA_CANCELAMENTO DATE NULL,
    STATUS VARCHAR(20) NOT NULL,
    VALOR_BRUTO DECIMAL(10,2) NOT NULL,
    VALOR_IMPOSTO DECIMAL(10,2) NOT NULL,
    VALOR_LIQUIDO DECIMAL(10,2) NOT NULL,
    ID_CLIENTE INT,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_CLIENTES_ID FOREIGN KEY (ID_CLIENTE) REFERENCES TB_CLIENTES(ID)
);

CREATE TABLE IF NOT EXISTS TB_DESCONTO (
	ID INT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(50) NOT NULL,
    PERCENTUAL DECIMAL(10,2) NOT NULL,
	DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
	CONSTRAINT PK PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS TB_PEDIDO_ITEM (
	ID INT AUTO_INCREMENT NOT NULL,
    DATA_IMPLANTACAO DATE NOT NULL,
    DATA_ENTREGA DATE NOT NULL,
    DATA_CANCELAMENTO  DATE NULL,
    SEQUENCIA INT NOT NULL,
    PRECO_VENDA DECIMAL(10,2) NOT NULL,
    QUANTIDADE INT NOT NULL,
    ID_PEDIDO_VENDA INT,
    ID_PRODUTO INT,
    ID_DESCONTO INT,
	DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_PEDIDO_VENDA FOREIGN KEY (ID_PEDIDO_VENDA) REFERENCES TB_PEDIDO (ID),
	CONSTRAINT FK_PEDIDO_PRODUTO_ITEM FOREIGN KEY (ID_PRODUTO) REFERENCES TB_PRODUTO (ID),
    CONSTRAINT FK_PEDIDO_DESCONTO FOREIGN KEY (ID_DESCONTO) REFERENCES TB_DESCONTO (ID)
);

CREATE TABLE IF NOT EXISTS TB_NOTA_ITEM (
	ID INT AUTO_INCREMENT NOT NULL,
    PRECO_VENDA DECIMAL(10,2) NOT NULL,
    PRECO_CALCULADO DECIMAL(10,2) NOT NULL,
    VALOR_IMPOSTO DECIMAL(10,2) NOT NULL,
    QUANTIDADE INT NOT NULL,
    ID_NOTA INT,
    ID_PRODUTO INT,
    ID_PEDIDO INT,
    DATA_CRIACAO DATETIME NOT NULL,
    DATA_ALTERACAO DATETIME NULL,
	DATA_CANCELAMENTO DATETIME NULL,
    CONSTRAINT PK PRIMARY KEY (ID),
    CONSTRAINT FK_NOTA FOREIGN KEY (ID_NOTA) REFERENCES TB_NOTA(ID),
    CONSTRAINT FK_PRODUTO FOREIGN KEY (ID_PRODUTO) REFERENCES TB_PRODUTO(ID),
    CONSTRAINT FK_PEDIDO_NOTA_ITEM FOREIGN KEY (ID_PEDIDO) REFERENCES TB_PEDIDO(ID)
);

-- Inserindo registros nas tabelas

INSERT INTO TB_CLASSIFICACAO (NOME,DATA_CRIACAO) 
VALUES ('BONÉS',CURRENT_TIMESTAMP()),
       ('CAMISAS',CURRENT_TIMESTAMP()),
       ('CAMISETAS',CURRENT_TIMESTAMP()),
       ('TÊNIS',CURRENT_TIMESTAMP()),
       ('MEIAS',CURRENT_TIMESTAMP()),
       ('SHORTS',CURRENT_TIMESTAMP()),
       ('ÓCULOS',CURRENT_TIMESTAMP()),
       ('RELÓGIOS',CURRENT_TIMESTAMP()),
       ('BOLAS',CURRENT_TIMESTAMP()),
       ('CHUTEIRAS',CURRENT_TIMESTAMP()),
       ('BOTAS',CURRENT_TIMESTAMP()),
       ('BERMUDAS',CURRENT_TIMESTAMP()),
       ('BOLSAS',CURRENT_TIMESTAMP()),
       ('MOCHILAS',CURRENT_TIMESTAMP()),
       ('LUVAS',CURRENT_TIMESTAMP()),
       ('MEIÕES',CURRENT_TIMESTAMP()),
       ('REGATAS',CURRENT_TIMESTAMP()),
       ('CAMISAS DE TIME',CURRENT_TIMESTAMP()),
	   ('CHINELOS',CURRENT_TIMESTAMP()),
	   ('JAQUETAS',CURRENT_TIMESTAMP());

INSERT INTO TB_CIDADE (NOME,DATA_CRIACAO) 
VALUES ('SOROCABA',CURRENT_TIMESTAMP()),
	   ('SÃO PAULO',CURRENT_TIMESTAMP()),	
       ('BELO HORIZONTE',CURRENT_TIMESTAMP()),
       ('PORTO ALEGRE',CURRENT_TIMESTAMP()),
       ('RIO DE JANEIRO',CURRENT_TIMESTAMP()),
       ('LUCAS DO RIO VERDE',CURRENT_TIMESTAMP()),
       ('SÃO MATEUS',CURRENT_TIMESTAMP()),
       ('SERRA',CURRENT_TIMESTAMP()),
       ('PALMAS',CURRENT_TIMESTAMP()),
       ('ARRAIAS',CURRENT_TIMESTAMP()),
       ('ALAGOINHAS',CURRENT_TIMESTAMP()),
       ('JUAZEIRO',CURRENT_TIMESTAMP()),
       ('CUIABÁ',CURRENT_TIMESTAMP()),
       ('IPERO',CURRENT_TIMESTAMP()),
       ('ILHÉUS',CURRENT_TIMESTAMP()),
       ('BOITUVA',CURRENT_TIMESTAMP()),
       ('SANTO ANDRÉ',CURRENT_TIMESTAMP()),
       ('PORTO VELHO',CURRENT_TIMESTAMP()),
       ('MANAUS',CURRENT_TIMESTAMP()),
       ('RECIFE',CURRENT_TIMESTAMP()),
       ('BLUMENAU',CURRENT_TIMESTAMP()),
       ('BRUSQUE',CURRENT_TIMESTAMP()),
       ('ITAPEMA',CURRENT_TIMESTAMP()),
       ('TUBARÃO',CURRENT_TIMESTAMP()),
       ('LONDRINA',CURRENT_TIMESTAMP()),
       ('APUCARANA',CURRENT_TIMESTAMP()),
       ('TOLEDO',CURRENT_TIMESTAMP()),
       ('CASCAVEL',CURRENT_TIMESTAMP()),
       ('OLINDA',CURRENT_TIMESTAMP()),
       ('CARUARU',CURRENT_TIMESTAMP()),
       ('ARCOVERDE',CURRENT_TIMESTAMP()),
       ('ALAGOINHA',CURRENT_TIMESTAMP()),
       ('BÉLEM',CURRENT_TIMESTAMP()),
       ('SANTARÉM',CURRENT_TIMESTAMP()),
       ('PONTA PORÃ',CURRENT_TIMESTAMP()),
       ('MARACAJU',CURRENT_TIMESTAMP()),
       ('DOURADOS',CURRENT_TIMESTAMP()),
       ('MARECHAL DEODORO',CURRENT_TIMESTAMP());

INSERT INTO TB_ESTADO (NOME,DATA_CRIACAO)
VALUES ('ACRE',CURRENT_TIMESTAMP()),
       ('ALAGOAS',CURRENT_TIMESTAMP()),
       ('AMAPÁ',CURRENT_TIMESTAMP()),
       ('AMAZONAS',CURRENT_TIMESTAMP()),
       ('BAHIA',CURRENT_TIMESTAMP()),
       ('CEARÁ',CURRENT_TIMESTAMP()),
       ('ESPÍRITO SANTO',CURRENT_TIMESTAMP()),
       ('GOIÁS',CURRENT_TIMESTAMP()),
       ('MARANHÃO',CURRENT_TIMESTAMP()),
       ('MATO GROSSO',CURRENT_TIMESTAMP()),
       ('MATO GROSSO DO SUL',CURRENT_TIMESTAMP()),
       ('MINAS GERAIS',CURRENT_TIMESTAMP()),
       ('PARÁ',CURRENT_TIMESTAMP()),
       ('PARAÍBA',CURRENT_TIMESTAMP()),
       ('PARANÁ',CURRENT_TIMESTAMP()),
       ('PERNAMBUCO',CURRENT_TIMESTAMP()),
       ('PIAUÍ',CURRENT_TIMESTAMP()),
       ('RIO DE JANEIRO',CURRENT_TIMESTAMP()),
       ('RIO GRANDE DO NORTE',CURRENT_TIMESTAMP()),
       ('RIO GRANDE DO SUL',CURRENT_TIMESTAMP()),
       ('RONDÔNIA',CURRENT_TIMESTAMP()),
       ('RORAIMA',CURRENT_TIMESTAMP()),
       ('SANTA CATARINA',CURRENT_TIMESTAMP()),
       ('SÃO PAULO',CURRENT_TIMESTAMP()),
       ('SERGIPE',CURRENT_TIMESTAMP()),
       ('TOCANTINS',CURRENT_TIMESTAMP()),
       ('DISTRITO FEDERAL',CURRENT_TIMESTAMP());

INSERT INTO TB_PAIS (NOME,DATA_CRIACAO)
VALUES ('BRASIL',CURRENT_TIMESTAMP()),
	   ('ALEMANHA',CURRENT_TIMESTAMP()),
 	   ('ESPANHA',CURRENT_TIMESTAMP()),
 	   ('ITALIA',CURRENT_TIMESTAMP()),
 	   ('COLOMBIA',CURRENT_TIMESTAMP()),
 	   ('ARGENTINA',CURRENT_TIMESTAMP()),
 	   ('CHILE',CURRENT_TIMESTAMP()),
 	   ('ESTADOS UNIDOS',CURRENT_TIMESTAMP()),
 	   ('MÉXICO',CURRENT_TIMESTAMP()),
 	   ('CANADÁ',CURRENT_TIMESTAMP()),
 	   ('URUGUAI',CURRENT_TIMESTAMP()),
 	   ('JAPÃO',CURRENT_TIMESTAMP()),
 	   ('CHINA',CURRENT_TIMESTAMP()),
 	   ('FRANÇA',CURRENT_TIMESTAMP()),
 	   ('NORUEGA',CURRENT_TIMESTAMP()),
 	   ('CROÁCIA',CURRENT_TIMESTAMP()),
 	   ('AUSTRÁLIA',CURRENT_TIMESTAMP()),
 	   ('ÍNDIA',CURRENT_TIMESTAMP()),
 	   ('BÉLGICA',CURRENT_TIMESTAMP()),
 	   ('RÚSSIA',CURRENT_TIMESTAMP());
 	   
INSERT INTO TB_ENDERECO (TIPO,CEP,RUA,NUMERO,BAIRRO,COMPLEMENTO,ID_CIDADE,ID_ESTADO,ID_PAIS,DATA_CRIACAO)
VALUES ('FATURAMENTO','02040070','RUA DA ARVORES',122,'PARQUE DA NATUREZA',NULL,2,24,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','13144550','AVENIDA 7 DE SETEMBRO',451,'CAMPOLIM',NULL,1,24,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','07262130','RUA BOM REPOUSO ',780,'BELVEDERE',NULL,3,12,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','04870470','AVENIDA ALBERTO BINS',332,'ANCHIETA',NULL,4,20,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','20020050','RUA PRIMEIRO DE MARÇO',454,'BANGU',NULL,5,18,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','78455000','RUA PASSO FUNDO',1000,'PIONEIRO',NULL,6,10,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','29000930','ALAMEDA BOM PASTOR',927,'VILA VALÉRIO',NULL,7,7,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','24717250','AVENIDA ABIDO SAAD',988,'BAIRRO NOVO',NULL,8,7,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','77001004','AVENIDA TOCANTIS',40,'TAQUARALTO',NULL,9,26,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','77330000','RUA DOIS',12,'SETOR CENTRAL',NULL,10,26,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','45201650','RUA PALHA',65,'CATU',NULL,11,5,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','47813634','ALAMEDA BUGUENVILLE',45,'PIRANGA',NULL,12,5,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','38705828','RUA 24 DE OUTUBRO',653,'COXIPÓ DA PONTE',NULL,13,10,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','18556000','AVENIDA CASTELO BRANCO',78,'GEORGE OETTERER',NULL,14,24,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','45600485','RUA PIEDADE',1946,'VILA OLIMPIO',NULL,15,5,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','18550000','RUA SÃO PAULO',444,'JARDIM ESPLANADA',NULL,16,24,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','09150050','RUA DIREITA',48,'CENTRO',NULL,17,24,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','55641726','RUA MARCELINA',1080,'CAIARI',NULL,18,21,1,CURRENT_TIMESTAMP()),
	   ('FATURAMENTO','27949316','RUA 3',260,'CIDADE DE DEUS',NULL,19,4,1,CURRENT_TIMESTAMP()),
       ('FATURAMENTO','35182066','RUA DO FOGO',403,'AFOGADOS',NULL,20,24,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','07727585','XV DE NOVEMBRO',66,'CENTRO',NULL,21,23,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','88318650','RUA SCHAEFER',77,'SÃO JOÃO',NULL,22,23,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','88220000','RUA 120B',88,'LEOPOLDO ZARLING',NULL,23,23,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','88701010','PEDRO MENEGAZ',99,'MORROTES',NULL,24,23,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','80010010','RUA SANTIAGO',110,'PEROBINHA',NULL,25,15,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','84264647','RUA RIO DE JANEIRO',111,'VILA NOVA',NULL,26,15,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','85900005','RUA HILBERTO PETTER',222,'TOCANTINS',NULL,27,15,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','50740170','RUA DIAMANTINA',333,'URUSSANGA',NULL,28,15,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','38204302','RUA JOSE',4645,'BAIRRO NOVO',NULL,29,16,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','55032570','RUA DA UNIÃO',444,'BAIRRO DO SALGADO',NULL,30,16,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','56501075','RUA BANDEIRA',555,'ALTO DO CARDEAL',NULL,31,16,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','55200000','RUA PALHA',666,'LAGOINHA',NULL,32,16,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','47806421','RUA CARLOS DE CARVALHO',777,'BARREIRO',NULL,33,13,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','68000000','ALAMEDA B',888,'MARARU',NULL,34,13,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','68005015','ALAMEDA AQUARIUS',6548,'IPANEMA',NULL,34,13,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','79900000','AVENIDA MARECHAL FLORIANO',78,'CABECEIRA DO APA',NULL,35,11,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','79150000','ALAMEDA DO VALE',63,'FORTALEZA',NULL,36,11,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','79800002','RUA CORONEL PONCIANO',32,'VILA HILDA',NULL,37,11,1,CURRENT_TIMESTAMP()),
	   ('ENTREGA','57160000','RUA MATO GROSSO',7117,'MASSAGUEIRA',NULL,38,2,1,CURRENT_TIMESTAMP()),
       ('ENTREGA','18010004','RUA DA PENHA',11,'CENTRO',NULL,1,24,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','07828595','RIO DE JANEIRO',1000,'ALPES DE CAIEIRAS',NULL,21,23,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','88319660','RUA OLIMPIO GADOTTI',693,'SÃO JOÃO',NULL,22,23,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','88000220','RUA NOVECENTOS',190,'MEIA PRAIA',NULL,23,23,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','88001010','AVENIDA MARECHAL DOEDORO',98,'CENTRO',NULL,24,23,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','70010010','MARECHAL DEODORO',99,'CENTRO',NULL,25,15,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','84164647','RUA CARMIM',784,'VILA SÃO FRANCISCO DE ASSIS',NULL,26,15,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','85910050','RUA BARAO DO RIO BRANCO',518,'CENTRO',NULL,27,15,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','50741070','RUA MAJOR J R PINHEIRO',530,'VARZÉA',NULL,28,15,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','38564302','RUA ARACAJU',12,'FRUTAL',NULL,29,16,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','55782570','RUA DR JOSÉ RAL CAVALCANTI',10,'BAIRRO DO SALGADO',NULL,30,16,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','56501075','RUA B LOT MBRITTO',1963,'COLISEU',NULL,31,16,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','55770000','RUA DUQUE DE CAXIAS',457,'PESQUEIRA',NULL,32,16,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','47806521','RUA ACÁCIAS',30,'PARQUE VERDE',NULL,33,13,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','68001200','RUA TIAGO XISTO ARAGAO',310,'MARARU',NULL,34,13,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','68065015','RUA LAMEIRA BITTERCOURT',71,'CENTRO',NULL,34,13,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','78900000','RUA PRINCIPAL CENTRO',4,'CENTRO',NULL,35,11,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','75150000','RUA DAS ALMAS',200,'NOVA BRASIL',NULL,36,11,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','77800002','AVENIDA DO CRUZEIRO',42,'VILA APARECIDA',NULL,37,11,1,CURRENT_TIMESTAMP()),
	   ('ENDERECO','57161000','RUA ARATU',694,'VILA CABREIRAS',NULL,38,2,1,CURRENT_TIMESTAMP()),
       ('ENDERECO','18010902','AVENIDA GISELE CONSTANTINO',3245,'PARQUE BELA VISTA',NULL,1,24,1,CURRENT_TIMESTAMP());
     
INSERT INTO TB_FORNECEDOR (NOME,CNPJ,ID_ENDERECO,DATA_CRIACAO)
VALUES ('INDUSTRIA LL LTDA','74749119000106',1,CURRENT_TIMESTAMP()),       
       ('IND SUCESSO LTDA','15243633000106',2,CURRENT_TIMESTAMP()),   
       ('TOP 10 LTDA','04134104000140',3,CURRENT_TIMESTAMP()),   
       ('JOAO CARDOSO LTDA','37971857000169',4,CURRENT_TIMESTAMP()),   
       ('NRQ CALÇADOS','09088672000175',5,CURRENT_TIMESTAMP()),   
       ('CUPUAÇU LTDA','10308746000110',6,CURRENT_TIMESTAMP()),   
       ('SAPATOS RAFAEL  LTDA','62239761000158',7,CURRENT_TIMESTAMP()),   
       ('CÃO CALÇADOS LTDA','14865353000169',8,CURRENT_TIMESTAMP()),   
       ('144 IND E TEX LTDA','56422913000150',9,CURRENT_TIMESTAMP()),   
       ('SOL E MAR LTDA','22127827000101',10,CURRENT_TIMESTAMP()),   
       ('CRIART LTDA','78652912000135',11,CURRENT_TIMESTAMP()),   
       ('AMANHECER LTDA','67737251000124',12,CURRENT_TIMESTAMP()),   
       ('SUL E NOR LTDA','91679069000149',13,CURRENT_TIMESTAMP()),   
       ('POE LOJAS LTDA','62450719000181',14,CURRENT_TIMESTAMP()),   
       ('BD AUL 7 LTDA','55339789000100',15,CURRENT_TIMESTAMP()),   
	   ('HOPE LTDA','68512516000159',16,CURRENT_TIMESTAMP()),
       ('3S LTDA','65003311000150',17,CURRENT_TIMESTAMP()),   
       ('ESTAMPARIA LTDA','41407543000105',18,CURRENT_TIMESTAMP()),   
       ('TENIS 90 LTDA','10755509000106',19,CURRENT_TIMESTAMP()),   
       ('CALCADOS YTTY LTDA','60296750000184',20,CURRENT_TIMESTAMP());  
      
INSERT INTO TB_PRODUTO (NOME,DESCRICAO,PRECO_COMPRA,PRECO_VENDA,ID_CLASSIFICACAO,ID_FORNECEDOR,DATA_CRIACAO)      
VALUES ('BONÉ ABA RETA DC','BONÉ ABA RETA DC PRETO E AZUL',10.00,35.00,1,1,CURRENT_TIMESTAMP()),
       ('CAMISETA BULLS','CAMISETA ACADEMIA P AZUL',15,45,3,5,CURRENT_TIMESTAMP()),
       ('CAMISETA BULLS','CAMISETA ACADEMIA M VERMELHO',20,50,3,5,CURRENT_TIMESTAMP()),
       ('CAMISETA BULLS','CAMISETA ACADEMIA G AZUL MARINHO',25,55,3,5,CURRENT_TIMESTAMP()),	
	   ('CAMISETA BULLS','CAMISETA ACADEMIA GG BRANCA',30,60,3,5,CURRENT_TIMESTAMP()),
	   ('TENIS CORRIDA W-ADIDAS','TENIS H-ADIDAS 354 BRANCO E PRETO FEM 35',200.45,459.99,4,19,CURRENT_TIMESTAMP()),
	   ('TENIS CORRIDA M-ADIDAS','TENIS H-ADIDAS 450 BRANCO E PRETO MAS 42',250.00,600.00,4,19,CURRENT_TIMESTAMP()),
	   ('TENIS ORIGINALS','TENIS ADIDAS ORIGINALS 445 BRANCO UNISSEX 38',150.00,258.59,4,19,CURRENT_TIMESTAMP()),
	   ('TENIS NIKE','TENIS CORRIDA NIKE PRETO 40 MASCULINO',100.00,369.00,4,19,CURRENT_TIMESTAMP()),
	   ('CAMISA CORINTHIANS 19E','CAMISA CORINTHIANS 1910 CLASSICA MASCULINA P',50.00,150.00,18,3,CURRENT_TIMESTAMP()),
	   ('CAMISA CORINTHIANS 19D','CAMISA CORINTHIANS 1910 CLASSICA MASCULINA M',60.00,160.00,18,3,CURRENT_TIMESTAMP()),
	   ('CAMISA CORINTHIANS 19S','CAMISA CORINTHIANS 1910 CLASSICA MASCULINA G',70.00,170.00,18,3,CURRENT_TIMESTAMP()),
       ('CAMISA PALMEIRAS 90R','CAMISA PALMEIRAS PARMALAT ANOS 90 FEMINIMA P',50.00,145.00,18,3,CURRENT_TIMESTAMP()),
       ('CAMISA PALMEIRAS 90D','CAMISA PALMEIRAS PARMALAT ANOS 90 FEMINIMA M',60.00,150.00,18,3,CURRENT_TIMESTAMP()),
       ('CAMISA PALMEIRAS 90C','CAMISA PALMEIRAS PARMALAT ANOS 90 FEMINIMA G',70.00,160.00,18,3,CURRENT_TIMESTAMP()),
	   ('CAMISA PALMEIRAS 90S','CAMISA PALMEIRAS PARMALAT ANOS 90 MASCULINA G',80.00,200.00,18,3,CURRENT_TIMESTAMP()),
	   ('CAMISA SÃO PAULO 001','CAMISA SÃO PAULO ROGERIO CENI 01 FEMININA M',60.00,150.00,18,4,CURRENT_TIMESTAMP()),
	   ('CAMISA SANTOS DF6','CAMISA SANTOS RETRO ANOS 50 MASCULINA P',50.00,100.00,18,3,CURRENT_TIMESTAMP()),
	   ('CAMISA SANTOS DF7','CAMISA SANTOS RETRO ANOS 50 MASCULINA M',60.00,140.00,18,3,CURRENT_TIMESTAMP()),
	   ('CAMISA SANTOS DF9','CAMISA SANTOS RETRO ANOS 50 MASCULINA G',70.00,150.00,18,8,CURRENT_TIMESTAMP()),
	   ('CHUTEIRA PUMA SSE','CHUTEIRA PUMA VERDE E BRANCO EDIÇÃO 2023',200.00,650.00,19,14,CURRENT_TIMESTAMP()),
	   ('CHUTEIRA PUMA EDF','CHUTEIRA PUMA PRETO ED MODEL RETR ANO 5',250.00,795.00,19,14,CURRENT_TIMESTAMP()),
	   ('CHUTEIRA NIKE ERFF','CHUTEIRA AMAR BRA COPA DO MUNDO 22',300.00,1000.00,19,14,CURRENT_TIMESTAMP()),       
	   ('MEIÃO ADIDAS DD','MEIÃO ADIDAS DD ADULTO SEM ESTAMPA',35,75,16,17,CURRENT_TIMESTAMP()),
	   ('MEIÃO NIKE DAS','MEIÃO NIKE DAS FEMININO ROSA',35,80,16,17,CURRENT_TIMESTAMP()),	   
       ('MEIÃO UMBRO QP','MEIÃO UMBRO QP INFANTIL TREINO',10,30,16,17,CURRENT_TIMESTAMP()),	   
       ('MEIÃO PUMA PQW','MEIÃO PUMA PQW ADULTO PRETO E BRANCO AAA ',30,55.00,16,17,CURRENT_TIMESTAMP()),	   
       ('JAQUETA CORRIDA','JAQUETA CORRIDA CORTA VENTO SLIM FEMININ BRANCA ',60,155.00,20,10,CURRENT_TIMESTAMP()),	   
       ('JAQUETA CORRIDA','JAQUETA CORRIDA CORTA VENTO SLIM MASCULINA BRANCA',60,155.00,20,10,CURRENT_TIMESTAMP());  

INSERT INTO TB_FILIAL (NOME,ID_GERENTE,DATA_CRIACAO)
VALUES ('FILIAL AC',NULL,CURRENT_TIMESTAMP()),
	   ('FILIAL AL',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL AP',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL AM',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL BA',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL CE',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL ES',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL GO',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL MA',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL MT',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL MS',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL MG',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL PA',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL PB',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL PR',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL PE',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL PI',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL RJ',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL RN',NULL,CURRENT_TIMESTAMP()),
	   ('FILIAL RS',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL RO',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL RR',NULL,CURRENT_TIMESTAMP()),
	   ('FILIAL SC',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL SP',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL SE',NULL,CURRENT_TIMESTAMP()),
       ('FILIAL TO',NULL,CURRENT_TIMESTAMP()),
	   ('FILIAL DF',NULL,CURRENT_TIMESTAMP());

INSERT INTO TB_VENDEDOR (NOME,TIPO,SITUACAO,ID_ENDERECO,ID_FILIAL,DATA_CRIACAO,DATA_DESLIGAMENTO)
VALUES ('JOAO ALBERTO','GERENTE',1,41,23,CURRENT_TIMESTAMP(),NULL),
       ('IVAN CARLOS','GERENTE',0,42,23,CURRENT_TIMESTAMP(),'2021-01-31 11:00:01'),
       ('PAULO CESAR','VENDEDOR',1,43,23,CURRENT_TIMESTAMP(),NULL),
	   ('ANDRE BRUNO DA SILVA','VENDEDOR',1,44,23,CURRENT_TIMESTAMP(),NULL),
	   ('ANTONIO CESAR JUNIOR','GERENTE',0,45,15,CURRENT_TIMESTAMP(),NULL),
       ('ANDREI DA COSTA','VENDEDOR',1,46,15,CURRENT_TIMESTAMP(),NULL),
       ('DAVID ABDON','GERENTE',0,47,15,CURRENT_TIMESTAMP(),'2022-12-31 08:30:01'),
       ('VALERIA MARIA','VENDEDOR',1,48,15,CURRENT_TIMESTAMP(),NULL),
       ('VANESSA ROSANGELA','GERENTE',1,49,16,CURRENT_TIMESTAMP(),NULL),
       ('AMANDA DUQUE','VENDEDOR',1,50,16,CURRENT_TIMESTAMP(),NULL),
       ('RAFAEL FREITAS DOS SANTOS','VENDEDOR',0,51,16,CURRENT_TIMESTAMP(),'2008-05-01 05:30:01'),
       ('JOSILVADO DE ALMEIDA','VENDEDOR',1,52,16,CURRENT_TIMESTAMP(),NULL),
       ('JOAQUIM GALERA','GERENTE',1,53,13,CURRENT_TIMESTAMP(),NULL),
       ('FERNANDO ARLEI','VENDEDOR',0,54,13,CURRENT_TIMESTAMP(),'2013-07-13 08:45:01'),
       ('DOM RAMON','VENDEDOR',1,55,13,CURRENT_TIMESTAMP(),NULL),
       ('JOSÉ DOS REIS','GERENTE',1,56,11,CURRENT_TIMESTAMP(),NULL),
       ('ARLINDO OHIO','VENDEDOR',1,57,11,CURRENT_TIMESTAMP(),NULL),
       ('ALEXANDRE OLIVEIRA ','VENDEDOR',1,58,11,CURRENT_TIMESTAMP(),NULL),
       ('DJAVAN','VENDEDOR',1,59,2,CURRENT_TIMESTAMP(),NULL),
	   ('RODRIGO ANDERSON','GERENTE',1,60,24,CURRENT_TIMESTAMP(),NULL);	

INSERT INTO TB_NATUREZA (NOME,DESCRICAO,DATA_CRIACAO)
VALUES ('1000','ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO ESTADO',CURRENT_TIMESTAMP()),
	   ('1100','COMPRAS PARA INDUSTRIALIZAÇÃO, COMERCIALIZAÇÃO OU PRESTAÇÃO DE SERVIÇOSO',CURRENT_TIMESTAMP()),
       ('5000','SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O ESTADO',CURRENT_TIMESTAMP()),
       ('5100','VENDAS DE PRODUÇÃO PRÓPRIA OU DE TERCEIROS',CURRENT_TIMESTAMP()),
       ('5101','VENDA DE PRODUÇÃO DO ESTABELECIMENTO',CURRENT_TIMESTAMP()),
       ('6900','OUTRAS SAÍDAS DE MERCADORIAS OU PRESTAÇÕES DE SERVIÇOS',CURRENT_TIMESTAMP()),
	   ('6901','REMESSA PARA INDUSTRIALIZAÇÃO POR ENCOMENDAS',CURRENT_TIMESTAMP()),
	   ('1101','COMPRA PARA COMERCIALIZAÇÃO',CURRENT_TIMESTAMP()),
	   ('2000','ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DE OUTROS ESTADOS',CURRENT_TIMESTAMP()),
       ('2101','COMPRAS PARA INDUSTRIALIZAÇÃO, COMERCIALIZAÇÃO OU PRESTAÇÃO DE SERVIÇOS',CURRENT_TIMESTAMP()),
       ('2600','CRÉDITOS E RESSARCIMENTOS DE ICMS',CURRENT_TIMESTAMP()),
       ('3100','COMPRAS PARA INDUSTRIALIZAÇÃO, COMERCIALIZAÇÃO OU PRESTAÇÃO DE SERVIÇOS',CURRENT_TIMESTAMP()),
       ('3101','COMPRA PARA INDUSTRIALIZAÇÃO',CURRENT_TIMESTAMP()),
       ('5103','VENDA DE PRODUÇÃO DO ESTABELECIMENTO, EFETUADA FORA DO ESTABELECIMENTO',CURRENT_TIMESTAMP()),
       ('5109','VENDA DE PRODUÇÃO DO ESTABELECIMENTO, DESTINADA À ZONA FRANCA DE MANAUS OU ÁREAS DE LIVRE COMÉRCIO',CURRENT_TIMESTAMP()),
       ('6000','SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA OUTROS ESTADOS',CURRENT_TIMESTAMP()),
       ('6101','VENDA DE PRODUÇÃO DO ESTABELECIMENTO',CURRENT_TIMESTAMP()),
       ('6103','VENDA DE PRODUÇÃO DO ESTABELECIMENTO, EFETUADA FORA DO ESTABELECIMENTO',CURRENT_TIMESTAMP()),
       ('7101','VENDAS DE PRODUÇÃO PRÓPRIA OU DE TERCEIROS',CURRENT_TIMESTAMP()),
       ('7102','VENDA DE MERCADORIA ADQUIRIDA OU RECEBIDA DE TERCEIROS',CURRENT_TIMESTAMP());

INSERT INTO TB_CONDICAO_PAGAMENTO (NOME,DATA_CRIACAO)
VALUES ('A VISTA',CURRENT_TIMESTAMP()),
	   ('30 DIAS',CURRENT_TIMESTAMP()),	   
       ('60 DIAS',CURRENT_TIMESTAMP()),
	   ('90 DIAS',CURRENT_TIMESTAMP()),
	   ('30/60/90 DIAS',CURRENT_TIMESTAMP()),
	   ('CARTÃO DE CREDITO',CURRENT_TIMESTAMP()),
	   ('45 DIAS',CURRENT_TIMESTAMP()),
	   ('40 DIAS',CURRENT_TIMESTAMP()),      
	   ('20 DIAS',CURRENT_TIMESTAMP()),       
	   ('10 DIAS ',CURRENT_TIMESTAMP()),       
	   ('30/60/90/120 DIAS',CURRENT_TIMESTAMP()),       
	   ('BOLETO 3 DIAS',CURRENT_TIMESTAMP()),       
	   ('CARTÃO DA LOJA',CURRENT_TIMESTAMP()),       
	   ('PIX',CURRENT_TIMESTAMP()),
	   ('BOLETO 10 DIAS',CURRENT_TIMESTAMP()),
	   ('AMOSTRA',CURRENT_TIMESTAMP()),       
	   ('45 DIAS 5 DIA DO MÊS',CURRENT_TIMESTAMP()), 
	   ('30 DIAS 10 DIA DO MÊS',CURRENT_TIMESTAMP()), 
	   ('30/45/60 DIAS',CURRENT_TIMESTAMP()), 
	   ('45/90 DIAS',CURRENT_TIMESTAMP());
       
INSERT INTO TB_CLIENTES (NOME,CNPJ,TIPO,ID_NATUREZA,ID_ENDERECO,ID_CONDICAO_PAGAMENTO,ID_VENDEDOR,ID_FILIAL,DATA_CRIACAO)     
VALUES ('INDUSTRIA E COMERCIO LTDA','30748774000166','PESSOA JURÍDICA',4,21,1,4,23,CURRENT_TIMESTAMP()),
	   ('SUL COMERCIO','42775109000140','PESSOA JURÍDICA',2,22,8,3,23,CURRENT_TIMESTAMP()),	   
       ('JOAO OLIVEIRA','12256153053','PESSOA FÍSICA',19,23,9,3,23,CURRENT_TIMESTAMP()),
	   ('SINTEGRA INDUSTRIA','85465960000180','PESSOA JURÍDICA',7,24,8,4,23,CURRENT_TIMESTAMP()),
	   ('AUGUSTO HUMBERTO DA SILVA','88436126033','PESSOA FÍSICA',5,25,8,6,15,CURRENT_TIMESTAMP()),
	   ('DAVID ANTONIO MOURA ','07996124051','PESSOA FÍSICA',7,26,9,8,15,CURRENT_TIMESTAMP()),
	   ('PARANA COMERCIO E IND','07834135000100','PESSOA JURÍDICA',20,27,8,6,15,CURRENT_TIMESTAMP()),       
	   ('PAR & LOG FERRAMENTAS','72137425000158','PESSOA JURÍDICA',17,28,9,8,15,CURRENT_TIMESTAMP()),      
	   ('DISTRIBUIDORA PE','00989086000127','PESSOA JURÍDICA',1,29,9,10,16,CURRENT_TIMESTAMP()),
	   ('SOL E MAR LTDA','09752695000132','PESSOA JURÍDICA',2,30,8,11,16,CURRENT_TIMESTAMP()),
	   ('OCEANO SOLUÇÃO','67407363000117','PESSOA JURÍDICA',3,31,5,12,16,CURRENT_TIMESTAMP()),
	   ('AJAX E EMP','12761586000196','PESSOA JURÍDICA',4,32,3,12,16,CURRENT_TIMESTAMP()),
	   ('THOMAS VINICIUS MORAES','50475760000','PESSOA FÍSICA',1,33,5,14,13,CURRENT_TIMESTAMP()),     
	   ('NOAH CAUA KAUE CALDEIRA','40951125060','PESSOA FÍSICA',1,34,7,15,13,CURRENT_TIMESTAMP()),       
	   ('ANDREA EMANUEELY ALESSANDRA NOGUEIRA','96035681042','PESSOA FÍSICA',1,35,11,14,13,CURRENT_TIMESTAMP()),       
	   ('MAITE LTDA COMERCIO','85100930000170','PESSOA JURÍDICA',8,36,4,18,11,CURRENT_TIMESTAMP()),       
	   ('PIETRA IND','68948348000149','PESSOA JURÍDICA',4,37,8,17,11,CURRENT_TIMESTAMP()),       
	   ('MHEL VID IND','61864673000184','PESSOA JURÍDICA',5,38,7,17,11,CURRENT_TIMESTAMP()),       
	   ('RIOS E SOLS AAAA','61864673000184','PESSOA JURÍDICA',7,39,1,19,2,CURRENT_TIMESTAMP()),       
	   ('BARCA & REAL','92774470000120','PESSOA JURÍDICA',8,40,1,20,24,CURRENT_TIMESTAMP());     

INSERT INTO TB_NOTA (DATA_EMISSAO,DATA_ENTREGA,VALOR_BRUTO,VALOR_IMPOSTO,VALOR_LIQUIDO,ID_CLIENTE,DATA_CRIACAO,DATA_CANCELAMENTO)
VALUES ('2022-01-01','2022-01-05',70,10,60.00,1,CURRENT_TIMESTAMP(),NULL),
       ('2023-01-31','2023-01-31',70.00,0,70.00,2,CURRENT_TIMESTAMP(),NULL),
	   ('2022-04-06','2023-04-06',600,100.00,500.00,3,CURRENT_TIMESTAMP(),NULL),       
       ('2022-04-06','2023-04-06',520,100,420,3,CURRENT_TIMESTAMP(),NULL),
       ('2022-05-06','2022-05-07',40.00,5,35,4,CURRENT_TIMESTAMP(),NULL),       
       ('2022-08-08','2022-08-08',600,6,594,7,CURRENT_TIMESTAMP(),NULL),
       ('2022-09-10','2022-09-11',64.5,10,54.5,8,CURRENT_TIMESTAMP(),NULL),       
       ('2022-01-11','2022-01-12',75,15,145.00,9,CURRENT_TIMESTAMP(),'2022-01-12'),              
       ('2022-05-02','2022-05-02',145,5,145,9,CURRENT_TIMESTAMP(),NULL),              
       ('2023-02-02','2023-02-03',150,140,10,10,CURRENT_TIMESTAMP(),NULL),              
       ('2022-06-29','2022-06-30',40,10,30,11,CURRENT_TIMESTAMP(),NULL),       
       ('2022-09-22','2022-09-22',850,5,845,11,CURRENT_TIMESTAMP(),NULL),      
       ('2022-09-09','2022-09-09',150,2,148,17,CURRENT_TIMESTAMP(),NULL),      
       ('2022-06-19','2022-06-20',2000,1,1999,18,CURRENT_TIMESTAMP(),NULL),       
       ('2022-04-10','2022-04-11',1000,100,900,1,CURRENT_TIMESTAMP(),'2022-04-11'),       
       ('2022-02-28','2022-03-30',1000,100,900,4,CURRENT_TIMESTAMP(),NULL),       
       ('2022-05-11','2022-05-11',180.00,1,179,5,CURRENT_TIMESTAMP(),NULL),
       ('2023-02-04','2023-02-05',30.00,2,28,9,CURRENT_TIMESTAMP(),NULL),
       ('2022-10-10','2022-10-11',55.00,50,5,10,CURRENT_TIMESTAMP(),NULL),
       ('2023-01-03','2023-01-04',155.00,5,150,10,CURRENT_TIMESTAMP(),NULL),       
       ('2022-08-15','2022-08-16',155.00,0,155,14,CURRENT_TIMESTAMP(),'2022-08-18');

INSERT INTO TB_PEDIDO (DATA_IMPLANTACAO,DATA_ENTREGA,DATA_CANCELAMENTO,STATUS,VALOR_BRUTO,VALOR_IMPOSTO,VALOR_LIQUIDO,ID_CLIENTE,DATA_CRIACAO)
VALUES ('2022-01-01','2022-01-05',NULL,'ATENDIDO TOTAL',35.00,10,25,1,CURRENT_TIMESTAMP()), 
       ('2023-01-31','2023-01-31',NULL,'ATENDIDO TOTAL',70,10,60,2,CURRENT_TIMESTAMP()), 
       ('2022-04-05','2022-04-06',NULL,'ATENDIDO TOTAL',1120,200,920,3,CURRENT_TIMESTAMP()), 
       ('2022-05-06','2022-05-07',NULL,'ATENDIDO TOTAL',40,05,35,4,CURRENT_TIMESTAMP()), 
       ('2022-08-07','2022-08-08',NULL,'ATENDIDO TOTAL',600,6,594,7,CURRENT_TIMESTAMP()), 
       ('2022-09-10','2022-09-11',NULL,'ABERTO',60,10,50,8,CURRENT_TIMESTAMP()), 
       ('2022-01-11','2022-01-12',NULL,'ATENDIDO PARCIAL',150,11,139,9,CURRENT_TIMESTAMP()), 
       ('2022-01-12','2022-01-12',NULL,'ATENDIDO TOTAL',369,9,360,10,CURRENT_TIMESTAMP()), 
       ('2022-09-22','2022-09-23',NULL,'ATENDIDO PARCIAL',1700,10,1690,11,CURRENT_TIMESTAMP()), 
       ('2022-08-21','2022-08-24',NULL,'ATENDIDO TOTAL',40,10,30,11,CURRENT_TIMESTAMP()), 
	   ('2022-07-20','2022-07-25',NULL,'ATENDIDO TOTAL',155,5,150,17,CURRENT_TIMESTAMP()), 
       ('2022-06-19','2022-06-20',NULL,'ATENDIDO TOTAL',2000.00,1,19,18,CURRENT_TIMESTAMP()), 
       ('2022-05-18','2022-05-20',NULL,'ATENDIDO PARCIAL',80,1,79,1,CURRENT_TIMESTAMP()), 
	   ('2022-04-17','2022-04-18',NULL,'ABERTO',75,70,5,4,CURRENT_TIMESTAMP()), 
       ('2022-03-16','2022-03-19',NULL,'ABERTO',155,10,145,5,CURRENT_TIMESTAMP()), 
       ('2022-01-15','2022-01-18',NULL,'ATENDIDO PARCIAL',2000,5,1995,9,CURRENT_TIMESTAMP()), 
       ('2022-05-01','2022-05-02','2022-05-30','CANCELADO',20000,2100,17900,10,CURRENT_TIMESTAMP()), 
       ('2023-01-02','2023-02-27','2023-02-28','CANCELADO',40,10,30,14,CURRENT_TIMESTAMP()), 
       ('2023-02-01','2023-02-01',NULL,'ATENDIDO TOTAL',1000,100,900,1,CURRENT_TIMESTAMP()), 
       ('2023-01-30','2023-02-01',NULL,'ATENDIDO PARCIAL',1000,10,990,1,CURRENT_TIMESTAMP());

INSERT INTO TB_DESCONTO (NOME,PERCENTUAL,DATA_CRIACAO)       
VALUES ('SEM DESCONTO',0.00,CURRENT_TIMESTAMP()),
       ('1% DE DESCONTO',0.01,CURRENT_TIMESTAMP()),	
	   ('2% DE DESCONTO',0.02,CURRENT_TIMESTAMP()),	
	   ('3% DE DESCONTO',0.03,CURRENT_TIMESTAMP()),	
	   ('4% DE DESCONTO',0.04,CURRENT_TIMESTAMP()),	
	   ('5% DE DESCONTO',0.05,CURRENT_TIMESTAMP()),	
	   ('6% DE DESCONTO',0.06,CURRENT_TIMESTAMP()),	
	   ('7% DE DESCONTO',0.07,CURRENT_TIMESTAMP()),	
	   ('8% DE DESCONTO',0.08,CURRENT_TIMESTAMP()),	
	   ('9% DE DESCONTO',0.09,CURRENT_TIMESTAMP()),	
	   ('10% DE DESCONTO',0.10,CURRENT_TIMESTAMP()),	
	   ('11% DE DESCONTO',0.11,CURRENT_TIMESTAMP()),	       
	   ('12% DE DESCONTO',0.12,CURRENT_TIMESTAMP()),	       
	   ('13% DE DESCONTO',0.13,CURRENT_TIMESTAMP()),	       
	   ('14% DE DESCONTO',0.14,CURRENT_TIMESTAMP()),	
	   ('15% DE DESCONTO',0.15,CURRENT_TIMESTAMP()),	       
	   ('16% DE DESCONTO',0.16,CURRENT_TIMESTAMP()),	       
	   ('17% DE DESCONTO',0.17,CURRENT_TIMESTAMP()),	
	   ('18% DE DESCONTO',0.18,CURRENT_TIMESTAMP()),	
	   ('19% DE DESCONTO',0.19,CURRENT_TIMESTAMP()),	   
       ('20% DE DESCONTO',0.20,CURRENT_TIMESTAMP());

INSERT INTO TB_PEDIDO_ITEM (DATA_IMPLANTACAO,DATA_ENTREGA,DATA_CANCELAMENTO,SEQUENCIA,PRECO_VENDA,QUANTIDADE,ID_PEDIDO_VENDA,ID_PRODUTO,ID_DESCONTO,DATA_CRIACAO) 
VALUES ('2022-01-01','2022-01-04',NULL,1,35,2,1,1,1,CURRENT_TIMESTAMP()),  
	   ('2023-01-31','2023-01-31',NULL,1,35,1,2,1,1,CURRENT_TIMESTAMP()),  
       ('2023-01-31','2023-01-31',NULL,2,35,1,2,1,1,CURRENT_TIMESTAMP()),  
       ('2022-04-05','2022-04-06',NULL,1,600,1,3,7,1,CURRENT_TIMESTAMP()),  
       ('2022-04-05','2022-04-06',NULL,2,650,1,3,21,21,CURRENT_TIMESTAMP()),  
       ('2022-05-06','2022-05-07',NULL,1,45,1,4,2,12,CURRENT_TIMESTAMP()),  
       ('2022-08-07','2022-08-08',NULL,1,600,1,5,7,1,CURRENT_TIMESTAMP()),  
       ('2022-09-10','2022-09-11',NULL,1,75.00,1,6,24,15,CURRENT_TIMESTAMP()),  
       ('2022-01-11','2022-01-12',NULL,1,75.00,1,7,24,1,CURRENT_TIMESTAMP()),  
       ('2022-01-11','2023-03-01',NULL,2,75.00,1,7,24,1,CURRENT_TIMESTAMP()),  
       ('2022-01-12','2022-01-12',NULL,1,30.00,1,8,26,21,CURRENT_TIMESTAMP()),  
       ('2022-01-12','2022-01-12',NULL,2,80,1,8,25,6,CURRENT_TIMESTAMP()),  
       ('2022-01-12','2022-01-12',NULL,3,155,2,8,28,14,CURRENT_TIMESTAMP()),  
       ('2022-09-22','2022-09-23',NULL,1,170,10,9,12,1,CURRENT_TIMESTAMP()),  
       ('2022-08-21','2022-08-24',NULL,1,45.00,1,10,2,21,CURRENT_TIMESTAMP()),  
       ('2022-07-20','2022-07-25',NULL,1,80.00,1,11,25,1,CURRENT_TIMESTAMP()),  
       ('2022-07-20','2022-07-25',NULL,2,75.00,1,11,24,1,CURRENT_TIMESTAMP()),  
       ('2022-06-19','2022-06-20',NULL,1,1000.00,1,12,23,1,CURRENT_TIMESTAMP()),  
       ('2022-06-19','2022-06-20',NULL,2,795.00,1,12,22,1,CURRENT_TIMESTAMP()),  
       ('2022-06-19','2022-06-20',NULL,3,155.00,1,12,29,1,CURRENT_TIMESTAMP()),  
       ('2022-05-18','2022-05-20',NULL,1,80.00,1,13,25,1,CURRENT_TIMESTAMP()),  
       ('2022-04-17','2022-04-18',NULL,1,35,1,14,1,1,CURRENT_TIMESTAMP()),  
       ('2022-04-17','2022-04-18',NULL,2,30,1,14,26,1,CURRENT_TIMESTAMP()),  
       ('2022-03-16','2022-03-19',NULL,1,155.00,1,15,28,1,CURRENT_TIMESTAMP()),  
       ('2022-01-15','2022-01-18',NULL,1,155.00,1,15,28,1,CURRENT_TIMESTAMP()),  
       ('2022-05-01','2022-05-02',NULL,1,100.00,10,16,18,1,CURRENT_TIMESTAMP()),  
       ('2022-05-01','2022-05-02',NULL,2,200,5,16,16,1,CURRENT_TIMESTAMP()),  
       ('2023-01-02','2023-02-27',NULL,1,45,1,17,2,5,CURRENT_TIMESTAMP()),  
       ('2022-10-11','2022-10-11',NULL,1,150.00,10,18,10,1,CURRENT_TIMESTAMP()),
       ('2022-10-11','2022-10-11',NULL,2,200,2,18,16,1,CURRENT_TIMESTAMP()),
       ('2022-10-11','2022-10-11',NULL,3,100,1,18,18,1,CURRENT_TIMESTAMP()),
       ('2023-01-30','2023-02-01',NULL,1,50.00,10,19,3,1,CURRENT_TIMESTAMP()),
       ('2023-01-30','2023-02-01',NULL,2,75.00,5,19,24,1,CURRENT_TIMESTAMP()),
       ('2023-01-30','2023-02-01',NULL,3,35.00,1,19,1,1,CURRENT_TIMESTAMP()),
	   ('2023-01-30','2023-02-01',NULL,4,35.00,1,19,1,21,CURRENT_TIMESTAMP());

INSERT INTO TB_NOTA_ITEM (PRECO_VENDA,PRECO_CALCULADO,VALOR_IMPOSTO,QUANTIDADE,ID_NOTA,ID_PRODUTO,ID_PEDIDO,DATA_CRIACAO,DATA_CANCELAMENTO)
VALUES (35.00,35.00,10.00,2,1,1,1,CURRENT_TIMESTAMP(),NULL),
	   (35.00,35.00,0,1,2,1,2,CURRENT_TIMESTAMP(),NULL),
       (600.00,600.00,100,1,3,7,3,CURRENT_TIMESTAMP(),NULL),
       (650.00,520.00,100,1,3,21,3,CURRENT_TIMESTAMP(),NULL),
       (45.00,40.05,5.00,1,5,2,4,CURRENT_TIMESTAMP(),NULL),
       (600.00,600.00,594.00,1,6,7,5,CURRENT_TIMESTAMP(),NULL),
	   (75.00,64.5,10,1,7,24,6,CURRENT_TIMESTAMP(),NULL),
       (75.00,75.00,11.00,1,8,24,7,CURRENT_TIMESTAMP(),NULL),
       (100.00,100.00,5,1,9,18,16,CURRENT_TIMESTAMP(),NULL),
       (30.00,24.00,3,1,10,26,8,CURRENT_TIMESTAMP(),NULL),
       (80.00,76.00,3,1,10,25,8,CURRENT_TIMESTAMP(),NULL),
       (155.00,134.85,3,2,10,28,8,CURRENT_TIMESTAMP(),NULL),
       (45.00,40.00,10,1,11,2,10,CURRENT_TIMESTAMP(),NULL),
       (170.00,170,1,5,5,12,9,CURRENT_TIMESTAMP(),NULL),
       (80.00,80.00,1,1,13,25,11,CURRENT_TIMESTAMP(),NULL),
       (75.00,75.00,1,1,13,24,11,CURRENT_TIMESTAMP(),NULL),
       (1000,1000,1,1,14,23,12,CURRENT_TIMESTAMP(),NULL),
       (795,795,0,1,14,22,12,CURRENT_TIMESTAMP(),NULL),
       (155,155,0,1,14,29,12,CURRENT_TIMESTAMP(),NULL),
       (50,50,25,10,15,3,19,CURRENT_TIMESTAMP(),NULL),
       (75,75,25,5,15,24,19,CURRENT_TIMESTAMP(),NULL),
       (35,35,25,1,15,1,19,CURRENT_TIMESTAMP(),NULL),
       (35,28,25,1,15,1,19,CURRENT_TIMESTAMP(),NULL);

-- Parte II: Desenvolvimento
 
-- Criação de pelo menos cinco relatórios:
-- ○ Podendo (ou não) ser gerados a partir de Stored Procedures, Views.
-- Três destes possuindo o uso de funções agregadas, vínculos entre outras tabelas, parâmetros customizados para seleção apropriada.
-- Considerando a nomenclatura das colunas (assim como a composição dos dados) ao entendimento do usuário

-- RELATÓRIO DE CLIENTES POR FILIAL

DELIMITER //
	CREATE PROCEDURE SP_CLIENTE_POR_FILIAL_PEDIDO (V_FILIAL VARCHAR(100)) 		
BEGIN 
	IF EXISTS (SELECT * FROM TB_FILIAL F2 WHERE F2.NOME=V_FILIAL) 	
THEN   
SELECT C.NOME AS CLIENTE, 
	   C.CNPJ AS CNPJ,
       C.TIPO AS TIPO,
	   F.NOME AS FILIAL,
       V.NOME AS VENDEDOR,
       (SELECT COUNT(P.ID) FROM TB_PEDIDO P WHERE P.ID_CLIENTE = C.ID  ) AS PEDIDOS
FROM TB_CLIENTES C 
INNER JOIN TB_FILIAL F
ON C.ID_FILIAL= F.ID
LEFT JOIN TB_VENDEDOR V
ON C.ID_VENDEDOR= V.ID
WHERE F.NOME=V_FILIAL;
    ELSE 
		SELECT CONCAT(V_FILIAL,' NÃO EXISTE,POR FAVOR VERIFIQUE.') AS MENSAGEM;
	END IF;  
END//


-- EXEMPLO DE COMO EXECUTAR A STORE PROCEDURE 

CALL SP_CLIENTE_POR_FILIAL_PEDIDO('FILIAL AL');


-- RELATÓRIO POR MÊS DE FATURAMENTO


DELIMITER //
	CREATE PROCEDURE SP_FATURAMENTO_MENSAL (V_COMPETENCIA VARCHAR(20)) 		
BEGIN 
SELECT 
    MAX(COMPETENCIA) AS COMPETENCIA,
    SUM(FATURAMENTO) AS FATURAMENTO
FROM
    (
     SELECT 
            YEAR(DATA_EMISSAO) * 100 + MONTH(DATA_EMISSAO) AS COMPETENCIA,
            IFNULL(SUM(VALOR_LIQUIDO), 0) AS FATURAMENTO
     FROM
		  TB_NOTA
     WHERE
          YEAR(DATA_EMISSAO) * 100 + MONTH(DATA_EMISSAO) = V_COMPETENCIA
     GROUP BY 
		  YEAR(DATA_EMISSAO) * 100 + MONTH(DATA_EMISSAO) 
       UNION ALL 
    SELECT 
	       V_COMPETENCIA AS COMPETENCIA, 
            0 AS FATURAMENTO
) AS FAT;
END//

-- EXEMPLO DE COMO RODAR O FATURAMENTO PARA QUALQUER MÊS

CALL SP_FATURAMENTO_MENSAL ('202201');


-- RELATÓRIO POR CLASSIFICAÇÃO E PEDIDOS 

DELIMITER //
	CREATE PROCEDURE SP_PEDIDOS_POR_CATEGORIA (V_DATA_INICIAL DATE, V_DATA_FIM DATE) 		
BEGIN 
SELECT C.NOME AS CLASSIFICAÇÃO,
       COUNT(DISTINCT(P.ID)) AS PEDIDOS,
       CASE WHEN MONTH(PI.DATA_IMPLANTACAO) = 1 THEN 'JANEIRO'
		    WHEN MONTH(PI.DATA_IMPLANTACAO) = 2 THEN 'FEVEREIRO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 3 THEN 'MARÇO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 4 THEN 'ABRIL'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 5 THEN 'MAIO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 6 THEN 'JUNHO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 7 THEN 'JULHO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 8 THEN 'AGOSTO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 9 THEN 'SETEMBRO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 10 THEN 'OUTUBRO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 11 THEN 'NOVEMBRO'
            WHEN MONTH(PI.DATA_IMPLANTACAO) = 12 THEN 'DEZEMBRO'
	   END AS MES,
	   YEAR(PI.DATA_IMPLANTACAO) AS ANO
	FROM TB_CLASSIFICACAO C
INNER JOIN TB_PRODUTO P
ON C.ID = P.ID_CLASSIFICACAO
INNER JOIN TB_PEDIDO_ITEM PI
ON P.ID = PI.ID_PRODUTO
WHERE PI.DATA_IMPLANTACAO BETWEEN V_DATA_INICIAL AND V_DATA_FIM
GROUP BY C.NOME,
	     MONTH(PI.DATA_IMPLANTACAO),
	     YEAR(PI.DATA_IMPLANTACAO)
ORDER BY MONTH(PI.DATA_IMPLANTACAO),
	     YEAR(PI.DATA_IMPLANTACAO);    
END //

-- EXEMPLO DE COMO EXECUTAR RELATÓRIO
CALL SP_PEDIDOS_POR_CATEGORIA ('2022-01-01','2022-05-01');

-- RELATÓRIO DOS TOP 5 FORNECEDORES QUE FORNECEM MAIS PRODUTOS PARA A GENTE

CREATE VIEW V_RELATORIO_FORNECEDORES_TOP_5 AS 
SELECT F.NOME AS FORNECEDOR,
       COUNT(P.ID) AS PRODUTOS,
       SUM(P.PRECO_VENDA) AS VALOR_DOS_PRODUTOS
FROM TB_FORNECEDOR F 
INNER JOIN TB_PRODUTO P
ON F.ID = P.ID_FORNECEDOR
GROUP BY F.NOME
ORDER BY COUNT(P.ID) DESC LIMIT 5;

SELECT * FROM V_RELATORIO_FORNECEDORES_TOP_5;

-- RELATÓRIO OPORTUNIDADES DE VENDAS EM REGIÕES SEM CLIENTES CADASTRADOS

CREATE VIEW V_RELATORIO_OPORTUNIDADES AS
    SELECT 
        F.NOME AS FILIAL
    FROM
        TB_FILIAL F
            LEFT JOIN
        TB_CLIENTES C ON F.ID = C.ID_FILIAL
    WHERE
        C.NOME IS NULL;

-- EXEMPLO DE COMO EXECUTAR O RETÓRIO 

SELECT * FROM V_RELATORIO_OPORTUNIDADES;

/*
● Uso de pelo menos quatro gatilhos: 
○ Para a composição da relação de registro entre as transações e/ou outros 
propósitos.
○ Para o caso da relação de registros:
■ Identificar a data e hora do evento.
■ Tipo do evento.
■ Usuário responsável pelo evento.       
*/

CREATE TABLE TB_LOGS ( 		
		ID INT AUTO_INCREMENT,
        LOG_DATA TIMESTAMP NOT NULL,
        EVENTO VARCHAR(100) NOT NULL,
        DETALHES VARCHAR(200) NOT NULL,
        USUARIO VARCHAR(100),
        CONSTRAINT PK PRIMARY KEY (ID)
);


SET GLOBAL log_bin_trust_function_creators = 1;

-- CRIAR FUNÇÃO PARA QAULQUER DATA

 DELIMITER //
CREATE FUNCTION FN_DATA_FORMATA(V_DATA DATETIME)
RETURNS VARCHAR(100)
BEGIN
DECLARE V_DATA_COMPLETA VARCHAR(100) DEFAULT NULL;
    SELECT
		  CONCAT(
				DAY(V_DATA),
                ' DO MÊS ',
                MONTH(V_DATA),
                ' DO ANO DE ',
				YEAR(V_DATA),
                ' ÁS ',
                HOUR(V_DATA),
                ' HORAS '
                ' E ',
                MINUTE(V_DATA),
                ' MINUTOS '
          ) INTO V_DATA_COMPLETA;
RETURN V_DATA_COMPLETA;
END //


-- TRIGGER PARA TB_CLASSIFICACAO INSERT

 DELIMITER //
 CREATE TRIGGER TB_CLASSIFICAO_TRIGGER_INSERT
 AFTER INSERT ON TB_CLASSIFICACAO
 FOR EACH ROW
	BEGIN
	     INSERT INTO TB_LOGS(LOG_DATA,EVENTO,DETALHES,USUARIO)
		 VALUES(
				CURRENT_TIMESTAMP(),
				'[NOVO REGISTRO]',
                CONCAT(
                'FOI INSERIDO UM NOVA CLASSIFICAÇÃO NA TABELA TB_CLASSIFICACAO ',
                NEW.NOME,
                ' ',
                FN_DATA_FORMATA(NEW.DATA_CRIACAO)
                ),
                CURRENT_USER()
			);
END //

INSERT INTO TB_CLASSIFICACAO (NOME,DATA_CRIACAO) 
VALUES ('MESA',CURRENT_TIMESTAMP());


-- TRIGGER TB_CLASSIFICAÇÃO NOS CASOS QUE TEM UMA ATUALIZAÇÃO

 DELIMITER //
 CREATE TRIGGER TB_CLASSIFICAO_TRIGGER_UPDATE
 AFTER UPDATE ON TB_CLASSIFICACAO
 FOR EACH ROW
	BEGIN
		IF NEW.DATA_ALTERACAO IS NOT NULL
           THEN 
	          INSERT INTO TB_LOGS(LOG_DATA,EVENTO,DETALHES,USUARIO)
		         VALUES(
				        CURRENT_TIMESTAMP(),
				        '[ATUALIZADO REGISTRO]',
                        CONCAT(
                                'FOI ATUALIZADO UMA CLASSIFICAÇÃO NA TABELA TB_CLASSIFICACAO DE ',
                                OLD.NOME,
							    ' ',
                                ' PARA ',
                                NEW.NOME,
                                ' ',
                                FN_DATA_FORMATA(NEW.DATA_CRIACAO)
                        ),
                       CURRENT_USER()
			    );
		END IF;
END //

-- TESTE DA TRIGGER DE ATUALIZAÇÃO

SELECT * FROM TB_CLASSIFICACAO WHERE ID=23;

UPDATE TB_CLASSIFICACAO
SET NOME='ACESSÓRIOS',DATA_ALTERACAO=CURRENT_TIMESTAMP()
WHERE ID=23;

SELECT * FROM TB_LOGS;
  
 --  TRIGGER DELETE TB_CLASSIFICACAO
  
DELIMITER //
CREATE TRIGGER TB_CLASSIFICAO_TRIGGER_DELETE
AFTER DELETE ON TB_CLASSIFICACAO
FOR EACH ROW
	BEGIN
		INSERT INTO TB_LOGS(LOG_DATA,EVENTO,DETALHES,USUARIO)
		         VALUES(
				        CURRENT_TIMESTAMP(),
				        '[DELETADO REGISTRO]',
                        CONCAT(
                                'FOI DELETADO UMA CLASSIFICAÇÃO NA TABELA TB_CLASSIFICACAO ',
                                OLD.NOME,
                                ' ',
                                FN_DATA_FORMATA(CURRENT_TIMESTAMP())
                        ),
                       CURRENT_USER()
			    );
END //

-- TESTA DA TRIGGER DE DELETE TB_CLASSIFICAÇÃO

SELECT * FROM TB_CLASSIFICACAO WHERE ID=23;
 
DELETE FROM TB_CLASSIFICACAO WHERE ID=23;
 
SELECT * FROM TB_LOGS;
  
 -- TRIGGER INSERT TB_CIDADE
 
 DELIMITER //
 CREATE TRIGGER TB_CIDADE_TRIGGER_INSERT
 AFTER INSERT ON TB_CIDADE
 FOR EACH ROW
	BEGIN
	     INSERT INTO TB_LOGS(LOG_DATA,EVENTO,DETALHES,USUARIO)
		 VALUES(
				CURRENT_TIMESTAMP(),
				'[NOVO REGISTRO]',
                CONCAT(
                'FOI INSERIDO UM NOVA CIDADE NA TABELA TB_CIDADE ',
                NEW.NOME,
                ' ',
                FN_DATA_FORMATA(NEW.DATA_CRIACAO)
                ),
                CURRENT_USER()
			);
END //
 
 -- TESTE TRIGGER TB_CIDADE_TRIGGER_INSERT
 
 INSERT INTO TB_CIDADE (NOME,DATA_CRIACAO) 
 VALUES ('ITAPETININGA',CURRENT_TIMESTAMP());
 
SELECT * FROM TB_LOGS;
 
 /*
 ● Uso de pelo menos três Stored Procedures.        
*/

-- PROCEDURE QUE ATUALIZA O GERENTE NO CAMPO GERENTE DA RELAÇÃO FILIAL

DELIMITER //
CREATE PROCEDURE SP_CORRIGE_FILIAL()
BEGIN
UPDATE TB_FILIAL F1
INNER JOIN TB_VENDEDOR V
ON F1.ID = V.ID_FILIAL
SET F1.ID_GERENTE = V.ID
WHERE V.TIPO='GERENTE' AND V.SITUACAO=1;
END //

-- EXEMPLO DE COMO RODAR A PROCEDURE

SELECT * FROM TB_FILIAL;

CALL SP_CORRIGE_FILIAL()

SELECT * FROM TB_FILIAL;


-- PROCEDURE QUE CRIA O PEDIDO DE VENDA PARA UM CLIENTE

SELECT * FROM TB_PEDIDO;

DELIMITER //
CREATE PROCEDURE SP_CRIA_PEDIDO_DE_VENDA(V_DATA_IMPLANTACAO DATE,V_DATA_ENTREGA DATE,V_VALOR_BRUTO DECIMAL(10,2),V_VALOR_IMPOSTO DECIMAL(10,2),V_CLIENTE VARCHAR(200))
BEGIN
    IF EXISTS
			(SELECT C.ID FROM TB_CLIENTES C WHERE C.NOME=V_CLIENTE )
			 THEN
	             INSERT INTO TB_PEDIDO (DATA_IMPLANTACAO,DATA_ENTREGA,STATUS,VALOR_BRUTO,VALOR_IMPOSTO,VALOR_LIQUIDO,ID_CLIENTE,DATA_CRIACAO)
                 VALUES (
                        V_DATA_IMPLANTACAO,   
                        V_DATA_ENTREGA,
                        'ABERTO',
                        V_VALOR_BRUTO,
                        V_VALOR_IMPOSTO,
                        V_VALOR_BRUTO - V_VALOR_IMPOSTO ,
                        (SELECT C.ID FROM TB_CLIENTES C WHERE C.NOME=V_CLIENTE),
                        CURRENT_TIMESTAMP()
				  );  
                  SELECT CONCAT('PEDIDO DE VENDA ',ID, ' CRIADO COM SUCESSO PARA O CLIENTE ',V_CLIENTE ) AS MENSAGEM FROM TB_PEDIDO ORDER BY ID DESC LIMIT 1;
             ELSE 
                 SELECT('POXA VOCÊ ERROU O CLIENTE OU AINDA ELE NÃO EXISTE, PODE VERIFICAR O CADASTRO POR FAVOR.') AS MENSAGEM;
	END IF;
END //

-- EXEMPLO DE COMO RODAR PROCEDURE QUE CRIA PEDIDO DE VENDA

CALL SP_CRIA_PEDIDO_DE_VENDA('2023-01-01','2023-01-12',1000.00,10.00,'SUL ');

CALL SP_CRIA_PEDIDO_DE_VENDA('2023-01-01','2023-01-12',1000.00,10.00,'SUL COMERCIO');

SELECT * FROM TB_PEDIDO WHERE ID=21;

-- PROCEDURE QUE CRIA INSERE REGISTRO NO PEDIDO DE VENDA ITEM E RECALCULA O VALOR NA RELAÇÃO PEDIDO VENDA

DELIMITER //
CREATE PROCEDURE SP_INSERE_ITEM_PEDIDO_DE_VENDA(V_DATA_ENTREGA DATE,V_PEDIDO INT,V_PRODUTO INT,V_QUANTIDADE INT,V_ID_DESCONTO INT)
	BEGIN 
         DECLARE V_PRECO_VENDA DECIMAL(10,2) DEFAULT 0;
         DECLARE V_DATA_IMPLANTACAO DATE DEFAULT NULL;
         DECLARE V_SEQUENCIA INT DEFAULT 0;
	     DECLARE V_BRUTO_TOTAL DECIMAL(10,2) DEFAULT 0;
		 DECLARE V_LIQUIDO_TOTAL DECIMAL(10,2) DEFAULT 0;
         SELECT DATA_IMPLANTACAO FROM TB_PEDIDO P WHERE P.ID=V_PEDIDO INTO V_DATA_IMPLANTACAO;
		 SELECT IFNULL(MAX(SEQUENCIA),0)+1 FROM TB_PEDIDO_ITEM PI WHERE PI.ID_PEDIDO_VENDA=V_PEDIDO INTO V_SEQUENCIA;
		 SELECT PRECO_VENDA FROM TB_PRODUTO P2 WHERE P2.ID=V_PRODUTO INTO V_PRECO_VENDA;
		 IF 
            V_DATA_IMPLANTACAO IS NULL
			        THEN 
					    SELECT CONCAT('PEDIDO DE VENDA INFORMADO ',V_PEDIDO,' NÃO EXISTE FAVOR VERIFIQUE O NÚMERO OU CRIE UM NOVO') AS MENSAGEM;
		 ELSEIF 
               V_PRECO_VENDA = 0
                    THEN
						SELECT CONCAT('PRODUTO INFORMADO ',V_PRODUTO,' NÃO EXISTE FAVOR VERIFIQUE O NÚMERO OU CRIE UM NOVO') AS MENSAGEM;    
		 ELSEIF NOT EXISTS
                  (SELECT PERCENTUAL FROM TB_DESCONTO D WHERE D.ID=V_ID_DESCONTO)
				    THEN    
                         SELECT CONCAT('DESCONTO INFORMADO ',V_ID_DESCONTO,' NÃO EXISTE FAVOR VERIFIQUE O NÚMERO OU CRIE UM NOVO') AS MENSAGEM;  
		 ELSE          
              INSERT INTO TB_PEDIDO_ITEM (DATA_IMPLANTACAO,DATA_ENTREGA,SEQUENCIA,PRECO_VENDA,QUANTIDADE,ID_PEDIDO_VENDA,ID_PRODUTO,ID_DESCONTO,DATA_CRIACAO)
              VALUES (
					 V_DATA_IMPLANTACAO,
                     V_DATA_ENTREGA,
                     V_SEQUENCIA,
                     V_PRECO_VENDA,
                     V_QUANTIDADE,
                     V_PEDIDO,
                     V_PRODUTO,
                     V_ID_DESCONTO,
                     CURRENT_TIMESTAMP()
              );
			  SELECT 
                     SUM((PI.PRECO_VENDA * QUANTIDADE) - (PI.PRECO_VENDA * QUANTIDADE) * D.PERCENTUAL) AS VALOR_BRUTO
                   FROM
                        TB_PEDIDO P
                   INNER JOIN
                        TB_PEDIDO_ITEM PI ON P.ID = PI.ID_PEDIDO_VENDA
                   INNER JOIN
                        TB_DESCONTO D ON PI.ID_DESCONTO = D.ID
             WHERE
                  P.ID = V_PEDIDO INTO V_BRUTO_TOTAL;
             SELECT 
				   SUM((PI.PRECO_VENDA*QUANTIDADE)-(PI.PRECO_VENDA*QUANTIDADE)*D.PERCENTUAL) - VALOR_IMPOSTO AS VALOR_LIQUIDO
                   FROM
                        TB_PEDIDO P
                   INNER JOIN
                        TB_PEDIDO_ITEM PI ON P.ID = PI.ID_PEDIDO_VENDA
                   INNER JOIN
                        TB_DESCONTO D ON PI.ID_DESCONTO = D.ID
             WHERE
                  P.ID = V_PEDIDO INTO V_LIQUIDO_TOTAL;
            
                UPDATE TB_PEDIDO
                SET VALOR_BRUTO = V_BRUTO_TOTAL ,VALOR_LIQUIDO = V_LIQUIDO_TOTAL
				WHERE ID = V_PEDIDO;
		END IF;    
END //

-- EXEMPLO DE COMO RODAR PROCEDURE QUE INSERE OS ITENS NO PEDIDO E CALCULA O VALOR

CALL SP_INSERE_ITEM_PEDIDO_DE_VENDA('2023-01-01',21,10,5,2);

SELECT * FROM TB_PEDIDO_ITEM WHERE ID_PEDIDO_VENDA=21;

SELECT * FROM TB_PEDIDO WHERE ID=21;

-- Usuários apropriados para determinadas tarefas no banco de dados (bem como experimentos mostrando a validação de utilização).

-- Usuário com permissão de validar as tabelas e inserir novos registros;

CREATE USER 'USER_CADASTRO'@'localhost' IDENTIFIED BY '123456';

GRANT SELECT, INSERT ON TRABALHO_FINAL.* TO 'USER_CADASTRO'@'localhost';

-- Validação da permissão do usuário quanto a permissão dele

/*
C:\Program Files\MySQL\MySQL Server 8.0\bin>mysql.exe -uUSER_CADASTRO -p
Enter password: ******
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 32
Server version: 8.0.31 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| performance_schema |
| trabalho_final     |
+--------------------+
3 rows in set (0.01 sec)

mysql> USE TRABALHO_FINAL;
Database changed
mysql> SELECT * FROM TB_CLIENTES ORDER BY ID DESC LIMIT 1;
+----+--------------+----------------+-----------------+-------------+-------------+-----------------------+-------------+-----------+---------------------+----------------+
| ID | NOME         | CNPJ           | TIPO            | ID_NATUREZA | ID_ENDERECO | ID_CONDICAO_PAGAMENTO | ID_VENDEDOR | ID_FILIAL | DATA_CRIACAO        | DATA_ALTERACAO |
+----+--------------+----------------+-----------------+-------------+-------------+-----------------------+-------------+-----------+---------------------+----------------+
| 20 | BARCA & REAL | 92774470000120 | PESSOA JURÍDICA |           8 |          40 |                     1 |          20 |        24 | 2023-03-03 15:04:21 | NULL           |
+----+--------------+----------------+-----------------+-------------+-------------+-----------------------+-------------+-----------+---------------------+----------------+
1 row in set (0.01 sec)

mysql> DROP TABLE TB_CLIENTES;
ERROR 1142 (42000): DROP command denied to user 'USER_CADASTRO'@'localhost' for table 'tb_clientes'
mysql> INSERT INTO TB_PAIS (NOME,DATA_CRIACAO) VALUES ('BOLIVIA',CURRENT_TIMESTAMP());
Query OK, 1 row affected (0.01 sec)
mysql> ALTER TABLE TB_PAIS ADD COLUMN TESTE VARCHAR(100);
ERROR 1142 (42000): ALTER command denied to user 'USER_CADASTRO'@'localhost' for table 'tb_pais'
mysql>*/


-- Usuário com acesso a ver o relatório dos fornecedores que mais fornecem 
 
CREATE USER 'USER_FORNECEDOR'@'localhost' IDENTIFIED BY '123456';

GRANT SELECT ON TRABALHO_FINAL.V_RELATORIO_FORNECEDORES_TOP_5 TO 'USER_FORNECEDOR'@'localhost';

-- Validação da permissão do usuário quanto a permissão dele

/*
C:\Program Files\MySQL\MySQL Server 8.0\bin>mysql.exe -uUSER_FORNECEDOR -p
Enter password: ******
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 33
Server version: 8.0.31 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| performance_schema |
| trabalho_final     |
+--------------------+
3 rows in set (0.01 sec)

mysql> USE TRABALHO_FINAL;
Database changed
mysql> SHOW TABLES;
+--------------------------------+
| Tables_in_trabalho_final       |
+--------------------------------+
| v_relatorio_fornecedores_top_5 |
+--------------------------------+
1 row in set (0.01 sec)

mysql> SELECT * FROM v_relatorio_fornecedores_top_5;
+----------------+----------+--------------------+
| FORNECEDOR     | PRODUTOS | VALOR_DOS_PRODUTOS |
+----------------+----------+--------------------+
| TOP 10 LTDA    |        9 |            1375.00 |
| 3S LTDA        |        4 |             240.00 |
| NRQ CALÇADOS   |        4 |             210.00 |
| TENIS 90 LTDA  |        4 |            1687.58 |
| POE LOJAS LTDA |        3 |            2445.00 |
+----------------+----------+--------------------+
5 rows in set (0.02 sec)

mysql> DROP VIEW v_relatorio_forncedores_top_5;
ERROR 1142 (42000): DROP command denied to user 'USER_FORNECEDOR'@'localhost' for table 'v_relatorio_forncedores_top_5'
mysql>*/

 
 
 -- Criar usuario que somente vai executar uma procedure.
 
CREATE USER 'USER_PROCEDURE_PV'@'localhost' IDENTIFIED BY '123456';

GRANT CREATE ROUTINE ON TRABALHO_FINAL.* TO 'USER_PROCEDURE_PV'@'localhost';

GRANT EXECUTE ON PROCEDURE TRABALHO_FINAL.SP_CRIA_PEDIDO_DE_VENDA TO 'USER_PROCEDURE_PV'@'localhost';

-- Teste permissão de acesso
/*

C:\Program Files\MySQL\MySQL Server 8.0\bin>mysql.exe -uUSER_PROCEDURE_PV -p
Enter password: ******
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 38
Server version: 8.0.31 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| performance_schema |
| trabalho_final     |
+--------------------+
3 rows in set (0.01 sec)

mysql> USE TRABALHO_FINAL;
Database changed
mysql> SHOW TABLES;
Empty set (0.00 sec)

mysql> CALL SP_CRIA_PEDIDO_DE_VENDA('2023-03-08','2023-03-11',1000.00,0.00,'JOAO OLIVEIRA');
+--------------------------------------------------------------------+
| MENSAGEM                                                           |
+--------------------------------------------------------------------+
| PEDIDO DE VENDA 22 CRIADO COM SUCESSO PARA O CLIENTE JOAO OLIVEIRA |
+--------------------------------------------------------------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

mysql> CALL SP_INSERE_ITEM_PEDIDO_DE_VENDA('2023-03-08',22,1,1,1);
ERROR 1370 (42000): execute command denied to user 'USER_PROCEDURE_PV'@'localhost' for routine 'trabalho_final.SP_INSERE_ITEM_PEDIDO_DE_VENDA'

mysql> DROP PROCEDURE SP_CRIA_PEDIDO_DE_VENDA;
ERROR 1370 (42000): alter routine command denied to user 'USER_PROCEDURE_PV'@'localhost' for routine 'trabalho_final.SP_CRIA_PEDIDO_DE_VENDA'
mysql>
*/

-- Usuário com permissão de alterar qualquer registro em todas as tabelas;

CREATE USER 'USER_UPDATE'@'localhost' IDENTIFIED BY '123456';

GRANT SELECT,UPDATE ON TRABALHO_FINAL.* TO 'USER_UPDATE'@'localhost';


-- TESTE DO USUÁRIO COM A PERMISSÃO DE ATUALIZAR E SELECIONAR TODOS OS REGISTROS

/*
C:\Program Files\MySQL\MySQL Server 8.0\bin>mysql.exe -uUSER_UPDATE -p
Enter password: ******
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 42
Server version: 8.0.31 MySQL Community Server - GPL

Copyright (c) 2000, 2022, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> USE TRABALHO_FINAL;
Database changed
mysql> START TRANSACTION;
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT * FROM TB_CIDADE;
+----+--------------------+---------------------+----------------+
| ID | NOME               | DATA_CRIACAO        | DATA_ALTERACAO |
+----+--------------------+---------------------+----------------+
|  1 | SOROCABA           | 2023-03-03 15:04:21 | NULL           |
|  2 | SÃO PAULO          | 2023-03-03 15:04:21 | NULL           |
|  3 | BELO HORIZONTE     | 2023-03-03 15:04:21 | NULL           |
|  4 | PORTO ALEGRE       | 2023-03-03 15:04:21 | NULL           |
|  5 | RIO DE JANEIRO     | 2023-03-03 15:04:21 | NULL           |
|  6 | LUCAS DO RIO VERDE | 2023-03-03 15:04:21 | NULL           |
|  7 | SÃO MATEUS         | 2023-03-03 15:04:21 | NULL           |
|  8 | SERRA              | 2023-03-03 15:04:21 | NULL           |
|  9 | PALMAS             | 2023-03-03 15:04:21 | NULL           |
| 10 | ARRAIAS            | 2023-03-03 15:04:21 | NULL           |
| 11 | ALAGOINHAS         | 2023-03-03 15:04:21 | NULL           |
| 12 | JUAZEIRO           | 2023-03-03 15:04:21 | NULL           |
| 13 | CUIABÁ             | 2023-03-03 15:04:21 | NULL           |
| 14 | IPERO              | 2023-03-03 15:04:21 | NULL           |
| 15 | ILHÉUS             | 2023-03-03 15:04:21 | NULL           |
| 16 | BOITUVA            | 2023-03-03 15:04:21 | NULL           |
| 17 | SANTO ANDRÉ        | 2023-03-03 15:04:21 | NULL           |
| 18 | PORTO VELHO        | 2023-03-03 15:04:21 | NULL           |
| 19 | MANAUS             | 2023-03-03 15:04:21 | NULL           |
| 20 | RECIFE             | 2023-03-03 15:04:21 | NULL           |
| 21 | BLUMENAU           | 2023-03-03 15:04:21 | NULL           |
| 22 | BRUSQUE            | 2023-03-03 15:04:21 | NULL           |
| 23 | ITAPEMA            | 2023-03-03 15:04:21 | NULL           |
| 24 | TUBARÃO            | 2023-03-03 15:04:21 | NULL           |
| 25 | LONDRINA           | 2023-03-03 15:04:21 | NULL           |
| 26 | APUCARANA          | 2023-03-03 15:04:21 | NULL           |
| 27 | TOLEDO             | 2023-03-03 15:04:21 | NULL           |
| 28 | CASCAVEL           | 2023-03-03 15:04:21 | NULL           |
| 29 | OLINDA             | 2023-03-03 15:04:21 | NULL           |
| 30 | CARUARU            | 2023-03-03 15:04:21 | NULL           |
| 31 | ARCOVERDE          | 2023-03-03 15:04:21 | NULL           |
| 32 | ALAGOINHA          | 2023-03-03 15:04:21 | NULL           |
| 33 | BÉLEM              | 2023-03-03 15:04:21 | NULL           |
| 34 | SANTARÉM           | 2023-03-03 15:04:21 | NULL           |
| 35 | PONTA PORÃ         | 2023-03-03 15:04:21 | NULL           |
| 36 | MARACAJU           | 2023-03-03 15:04:21 | NULL           |
| 37 | DOURADOS           | 2023-03-03 15:04:21 | NULL           |
| 38 | MARECHAL DEODORO   | 2023-03-03 15:04:21 | NULL           |
| 39 | ITAPETININGA       | 2023-03-07 11:03:14 | NULL           |
+----+--------------------+---------------------+----------------+
39 rows in set (0.01 sec)

mysql> UPDATE TB_CIDADE
    -> SET NOME='TESTE';
Query OK, 39 rows affected (0.00 sec)
Rows matched: 39  Changed: 39  Warnings: 0

mysql> SELECT * FROM TB_CIDADE;
+----+-------+---------------------+----------------+
| ID | NOME  | DATA_CRIACAO        | DATA_ALTERACAO |
+----+-------+---------------------+----------------+
|  1 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  2 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  3 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  4 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  5 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  6 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  7 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  8 | TESTE | 2023-03-03 15:04:21 | NULL           |
|  9 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 10 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 11 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 12 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 13 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 14 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 15 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 16 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 17 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 18 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 19 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 20 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 21 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 22 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 23 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 24 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 25 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 26 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 27 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 28 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 29 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 30 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 31 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 32 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 33 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 34 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 35 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 36 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 37 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 38 | TESTE | 2023-03-03 15:04:21 | NULL           |
| 39 | TESTE | 2023-03-07 11:03:14 | NULL           |
+----+-------+---------------------+----------------+
39 rows in set (0.00 sec)

mysql> ROLLBACK;
Query OK, 0 rows affected (0.01 sec)

mysql> SELECT * FROM TB_CIDADE;
+----+--------------------+---------------------+----------------+
| ID | NOME               | DATA_CRIACAO        | DATA_ALTERACAO |
+----+--------------------+---------------------+----------------+
|  1 | SOROCABA           | 2023-03-03 15:04:21 | NULL           |
|  2 | SÃO PAULO          | 2023-03-03 15:04:21 | NULL           |
|  3 | BELO HORIZONTE     | 2023-03-03 15:04:21 | NULL           |
|  4 | PORTO ALEGRE       | 2023-03-03 15:04:21 | NULL           |
|  5 | RIO DE JANEIRO     | 2023-03-03 15:04:21 | NULL           |
|  6 | LUCAS DO RIO VERDE | 2023-03-03 15:04:21 | NULL           |
|  7 | SÃO MATEUS         | 2023-03-03 15:04:21 | NULL           |
|  8 | SERRA              | 2023-03-03 15:04:21 | NULL           |
|  9 | PALMAS             | 2023-03-03 15:04:21 | NULL           |
| 10 | ARRAIAS            | 2023-03-03 15:04:21 | NULL           |
| 11 | ALAGOINHAS         | 2023-03-03 15:04:21 | NULL           |
| 12 | JUAZEIRO           | 2023-03-03 15:04:21 | NULL           |
| 13 | CUIABÁ             | 2023-03-03 15:04:21 | NULL           |
| 14 | IPERO              | 2023-03-03 15:04:21 | NULL           |
| 15 | ILHÉUS             | 2023-03-03 15:04:21 | NULL           |
| 16 | BOITUVA            | 2023-03-03 15:04:21 | NULL           |
| 17 | SANTO ANDRÉ        | 2023-03-03 15:04:21 | NULL           |
| 18 | PORTO VELHO        | 2023-03-03 15:04:21 | NULL           |
| 19 | MANAUS             | 2023-03-03 15:04:21 | NULL           |
| 20 | RECIFE             | 2023-03-03 15:04:21 | NULL           |
| 21 | BLUMENAU           | 2023-03-03 15:04:21 | NULL           |
| 22 | BRUSQUE            | 2023-03-03 15:04:21 | NULL           |
| 23 | ITAPEMA            | 2023-03-03 15:04:21 | NULL           |
| 24 | TUBARÃO            | 2023-03-03 15:04:21 | NULL           |
| 25 | LONDRINA           | 2023-03-03 15:04:21 | NULL           |
| 26 | APUCARANA          | 2023-03-03 15:04:21 | NULL           |
| 27 | TOLEDO             | 2023-03-03 15:04:21 | NULL           |
| 28 | CASCAVEL           | 2023-03-03 15:04:21 | NULL           |
| 29 | OLINDA             | 2023-03-03 15:04:21 | NULL           |
| 30 | CARUARU            | 2023-03-03 15:04:21 | NULL           |
| 31 | ARCOVERDE          | 2023-03-03 15:04:21 | NULL           |
| 32 | ALAGOINHA          | 2023-03-03 15:04:21 | NULL           |
| 33 | BÉLEM              | 2023-03-03 15:04:21 | NULL           |
| 34 | SANTARÉM           | 2023-03-03 15:04:21 | NULL           |
| 35 | PONTA PORÃ         | 2023-03-03 15:04:21 | NULL           |
| 36 | MARACAJU           | 2023-03-03 15:04:21 | NULL           |
| 37 | DOURADOS           | 2023-03-03 15:04:21 | NULL           |
| 38 | MARECHAL DEODORO   | 2023-03-03 15:04:21 | NULL           |
| 39 | ITAPETININGA       | 2023-03-07 11:03:14 | NULL           |
+----+--------------------+---------------------+----------------+
39 rows in set (0.00 sec)

mysql> ALTER TABLE TB_CIDADE
    -> ADD COLUMN TESTE VARCHAR(10) NULL;
ERROR 1142 (42000): ALTER command denied to user 'USER_UPDATE'@'localhost' for table 'tb_cidade'
mysql> DELETE FROM TB_CIDADE;
ERROR 1142 (42000): DELETE command denied to user 'USER_UPDATE'@'localhost' for table 'tb_cidade'
mysql>
*/



